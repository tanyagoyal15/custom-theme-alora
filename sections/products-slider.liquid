{% assign collection_handle = section.settings.collection_handle %}
{% assign collection = collections[collection_handle] %}
{% if collection %}
  {% assign products = collection.products %}
  {% assign total_product_count = products.size %}
  {% if total_product_count == 0 %}
    {% assign total_product_count = 6 %}
  {% endif %}
{% else %}
  {% assign total_product_count = 6 %}
{% endif %}
{% assign visible_product_count = section.settings.images_per_slide_desktop %}
{% assign max_steps = section.settings.images_per_slide_desktop | minus: 1 %}
{% assign step_percentage = 100 | divided_by: max_steps | plus: 1 %}
{% assign start_position = 0 %}
{% assign end_position = start_position | plus: step_percentage %}
{%- assign mobile_skeleton_count = section.settings.images_per_slide_mobile | default: 2 -%}
{%- assign desktop_skeleton_count = section.settings.images_per_slide_desktop | default: 4 -%}

<script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
<section
  class="slider-container color-scheme-{{ section.settings.color_scheme }} flex-column align-center text-center m-auto relative h-auto shopify-section section {{ section.id }}"
  data-collection-handle="{{ collection_handle }}"
  data-product-count="{{ total_product_count }}"
>
  <h2 class="products-slider__heading text-3xl m-0 mb-16 text-capitalize cl-theme">{{ section.settings.heading }}</h2>
  <h4 class="products-slider__subheading text-large font-regular m-0 mb-16 cl-theme">
    {{ section.settings.subheading }}
  </h4>
  <a
    class="products-slider__link_btn underline text-base font-regular cl-theme m-0 mb-16"
    href="{{ section.settings.button_link | default: '/' }}"
  >
    {{- section.settings.button_label -}}
  </a>

  <div class="slider w-100 flow-hidden mt-16">
    <div
      class="slider-wrapper flex justify-between h-auto"
      data-images-per-slide-desktop="{{ section.settings.images_per_slide_desktop }}"
      data-images-per-slide-mobile="{{ section.settings.images_per_slide_mobile }}"
    >
      {% if collection and products.size > 0 %}
        <!-- Desktop Skeleton Loader (Visible Initially) -->
        <div class="products-slider-skeleton-container skeleton-desktop">
          {% for i in (1..desktop_skeleton_count) %}
            {% assign width = 100 | divided_by: desktop_skeleton_count %}
            {% if mobile_skeleton_count == 1 %}
              {% assign min_height = 500 %}
            {% else %}
              {% assign min_height = 500 | divided_by: section.settings.images_per_slide_desktop %}
            {% endif %}
            <div class="products-slider-skeleton-wrapper" style="width: {{ width }}%; min-height: {{ min_height }}px;">
              <div class="products-slider-skeleton-loader"></div>
            </div>
          {% endfor %}
        </div>

        <!-- Mobile Skeleton Loader (Visible Initially) -->
        <div class="products-slider-skeleton-container skeleton-mobile">
          {% for i in (1..mobile_skeleton_count) %}
            {% assign width = 100 | divided_by: mobile_skeleton_count | minus: 4 %}
            {% if mobile_skeleton_count == 1 %}
              {% assign min_height = 600 %}
            {% else %}
              {% assign min_height = 600 | divided_by: section.settings.images_per_slide_mobile %}
            {% endif %}
            <div class="products-slider-skeleton-wrapper" style="width: {{ width }}%; min-height: {{ min_height }}px;">
              <div class="products-slider-skeleton-loader"></div>
            </div>
          {% endfor %}
        </div>

        <!-- Products slider (Visible Initially) -->
        <div class="product-list flex hidden">
          {% assign product_form_id = 'product-form-' | append: section.id -%}
          {% for product in products %}
            <a
              href="{{ product.url }}"
              class="product-card relative flex-column align-center text-center h-auto flow-hidden no-underline cl-theme"
            >
              <div class="card flex-column pr-8 pl-8 pointer">
                <div class="relative h-100 w-100">
                  <!-- Product Image -->
                  <img
                    src="{{ product.featured_image | image_url }}"
                    alt="{{ product.title }}"
                    width="100%"
                    height="100%"
                    class="slide-image hidden"
                    loading="eager"
                  >
                  {% comment %} <div class="product-card-actions">{{ section.settings.quick_actions_text }}</div> {% endcomment %}
                  {%- liquid
                    assign gift_card_recipient_feature_active = false
                  -%}
                  <product-form
                    class="product-form"
                    data-hide-errors="{{ gift_card_recipient_feature_active }}"
                    data-section-id="{{ section.id }}"
                  >
                    <div class="product-form__error-message-wrapper" role="alert" hidden>
                      <span class="svg-wrapper">
                        {{- 'icon-error.svg' | inline_asset_content -}}
                      </span>
                      <span class="product-form__error-message"></span>
                    </div>

                    {%- form 'product',
                      product,
                      id: product_form_id,
                      class: 'form',
                      novalidate: 'novalidate',
                      data-type: 'add-to-cart-form'
                    -%}
                      <input
                        type="hidden"
                        name="id"
                        value="{{ product.selected_or_first_available_variant.id }}"
                        {% if product.selected_or_first_available_variant.available == false
                          or product.selected_or_first_available_variant == null
                        %}
                          disabled
                        {% endif %}
                        class="product-variant-id"
                      >

                      {%- if gift_card_recipient_feature_active -%}
                        {%- render 'gift-card-recipient-form', product: product, form: form, section: section -%}
                      {%- endif -%}

                      <div class="product-form__buttons">
                        {%- liquid
                          assign check_against_inventory = true
                          if product.selected_or_first_available_variant.inventory_management != 'shopify' or product.selected_or_first_available_variant.inventory_policy == 'continue'
                            assign check_against_inventory = false
                          endif
                          if product.selected_or_first_available_variant.quantity_rule.min > product.selected_or_first_available_variant.inventory_quantity and check_against_inventory
                            assign quantity_rule_soldout = true
                          endif
                        -%}
                        {% assign min_width = 250 | divided_by: section.settings.images_per_slide_mobile %}
                        <button
                          id="ProductSubmitButton-{{ section.id }}"
                          type="submit"
                          name="add"
                          class="product-card-actions flex-center {% if quantity_rule_soldout %} btn-disabled {% endif %}"
                          style="min-width: {{ min_width }}px;"
                          {% if product.selected_or_first_available_variant.available == false
                            or quantity_rule_soldout
                            or product.selected_or_first_available_variant == null
                          %}
                            disabled
                          {% endif %}
                        >
                          <span class="product-actions-text">
                            {%- if product.selected_or_first_available_variant == null -%}
                              {{ 'products.product.unavailable' | t }}
                            {%- elsif product.selected_or_first_available_variant.available == false
                              or quantity_rule_soldout
                            -%}
                              {{ 'products.product.sold_out' | t }}
                            {%- else -%}
                              {{ 'products.product.add_to_cart' | t }}
                            {%- endif -%}
                          </span>
                          {% comment %} <span>{{ section.settings.quick_actions_text }}</span> {% endcomment %}
                          {%- render 'loading-spinner' -%}
                        </button>
                      </div>
                    {%- endform -%}
                  </product-form>
                  {% if product.compare_at_price > product.price %}
                    <div class="product-badges">
                      <div class="product-badge">SALE</div>
                      {%- comment -%}
                      <div>{{ ((product.compare_at_price - product.price) / product.compare_at_price) | times: 100 | round }}% OFF</div>
                      {%- endcomment -%}
                    </div>
                  {% endif %}
                  {% comment %}
                    <div class="product-quick-view">
                      <img
                        src="{{ 'icon-search-black.png' | asset_url }}"
                        alt="Search Icon"
                        class="icon-search-dark"
                        width="30px"
                        height="30px"
                      >
                    </div>
                  {% endcomment %}
                </div>
                {% if section.settings.show_product_info %}
                  <div class="product-info text-left w-100 h-auto mt-8 pointer">
                    <p class="m-0 font-medium">{{ product.title }}</p>
                    <div class="m-0 text-secondary product-description">
                      {{ product.description | truncatewords: 15 }}
                    </div>
                    <p class="m-0 product-price">
                      <span class="mr-16">{{ product.price | money }}</span>
                      <span class="strikethrough">{{ product.compare_at_price | money }}</span>
                    </p>
                  </div>
                {% endif %}
              </div>
            </a>
          {% endfor %}
        </div>
      {% else %}
        {% for i in (1..6) %}
          <a class="product-card relative flex-column align-center text-center h-auto flow-hidden no-underline cl-theme">
            <div class="card flex-column pr-8 pl-8 pointer">
              <div class="relative h-100 w-100">
                {% liquid
                  assign ridx = forloop.rindex
                  case ridx
                    when 5
                      assign ridx = 1
                    when 6
                      assign ridx = 2
                  endcase
                %}
                {%- assign placeholder_image = 'product-apparel-' | append: ridx -%}
                {{ placeholder_image | placeholder_svg_tag: 'placeholder-svg' }}
              </div>
              <div class="product-info text-left w-100 h-auto mt-8 pointer">
                <p class="m-0 font-medium">Example product title</p>
                <div class="m-0 text-secondary product-description">This is a sample product description.</div>
                <p class="m-0 product-price">
                  <span class="mr-16">₹19.99</span>
                  <span class="strikethrough">₹39.99</span>
                </p>
              </div>
            </div>
          </a>
        {% endfor %}
      {% endif %}
    </div>
  </div>

  <div class="slider-controls flex-center mt-16 w-100" data-show-slider-bar="{{ section.settings.show_slider_bar }}">
    <!-- Arrows -->
    <div class="slider-arrows flex align-center">
      <img
        src="{{ 'arrow-left.svg' | asset_url }}"
        alt="Left Arrow"
        class="slider-left pointer"
        width="50"
        height="50"
        loading="eager"
      >
      <p class="m-0 flex">
        <span class="visible_items_count">{{ visible_product_count }}</span>/
        <span class="total_items_count">{{ total_product_count }}</span>
      </p>
      <img
        src="{{ 'arrow-right.svg' | asset_url }}"
        alt="Right Arrow"
        class="slider-right pointer"
        width="50"
        height="50"
        loading="eager"
      >
    </div>

    {% if section.settings.show_slider_bar %}
      <!-- Custom Range Slider with Progress Bar -->
      <div class="slider-track-container relative flow-hidden pointer">
        <div
          class="slider-progress"
          style="width: {{ end_position | minus: start_position }}%; left: {{ start_position }}%;"
        ></div>
        <!-- Rectangular progress indicator -->
        <input
          type="range"
          min="0"
          value="0"
          class="slider-input absolute h-100 pointer"
          max="{{ collections['all'].products.size | minus: 3 | divided_by: 3 }}"
          step="3"
        >
      </div>
    {% endif %}
  </div>
</section>

<style>
    /* General container styling */
    .slider-container {
      max-width: 85%;
    }

    /* Image Wrapper */
    .slider-wrapper {
      {% comment %} display: flex;
      justify-content: space-between; {% endcomment %}
      transition: transform 0.5s ease-in-out;
      height: auto;
    }

    {% comment %} Understand it {% endcomment %}
    .slider-wrapper .product-card {
      {% comment %} width: calc(100% / 3 - 10px); {% endcomment %}
      flex-shrink: 0;
      height: auto;
      overflow: hidden;
      align-items: flex-start;
    }

    .card {
      width: 100%;
      height: 100%;
      align-items: flex-start;
    }

    /* Skeleton Loader Styles */
    .products-slider-skeleton-container {
      display: flex;
      gap: 16px;
      width: 100%;
      justify-content: center;
    }

    .products-slider-skeleton-wrapper {
      width: 100%;
      min-height: 500px;
      overflow: hidden;
      background: #f3f3f3;
      position: relative;
    }

    .products-slider-skeleton-loader {
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, #e0e0e0 25%, #f5f5f5 50%, #e0e0e0 75%);
      background-size: 400% 100%;
      animation: skeleton-loading 1.5s infinite ease-in-out;
    }

    .skeleton-desktop {
      display: flex;
    }

    .skeleton-mobile {
      display: none;
    }

    @keyframes skeleton-loading {
      0% {
        background-position: 100% 0;
      }
      100% {
        background-position: -100% 0;
      }
    }

    .fade-in {
      opacity: 0;
      animation: fadeIn 0.5s ease-in forwards;
    }

    @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }

    .slider-wrapper .product-card img {
      object-fit: cover;
      max-height: 600px;
    }

      .slider-track-container {
        width: 90%;
        height: 5px; /* Height of the slider track */
        background: #e0e0e0; /* Light gray background for track */
        border-radius: 3px;
        margin: 0 8px;
    }

    .slider-progress {
        position: absolute;
        height: 100%;
        background: #000; /* Change to any color */
        width: 0%; /* Start at 0% */
        display: block !important;
        transition: all 0.3s ease-in-out;
    }

    .slider-input {
        height: 5px;
        opacity: 0; /* Hide default range slider */
    }

    .product-description p {
      margin: 0;
    }

    .product-info {
      transition: transform 0.4s ease-in-out;
      min-height: 80px;
      z-index: 1000000;
      min-height: auto;
      height: auto;
    }

    .product-description {
      /* font-size: 12px;
      opacity: 0;
      transform: translateY(-5px);
      transition: opacity 0.4s ease-in-out, transform 0.4s ease-in-out;
      height: 0; */


      font-size: 12px;
      line-height: 1.4;
      height: auto;
      opacity: 1;
      transform: none;
      overflow: hidden;
      display: -webkit-box;
      -webkit-line-clamp: 2;  /* Show max 2 lines */
      -webkit-box-orient: vertical;
  }

  .product-price {
      font-size: 14px;
      transition: transform 0.4s ease-in-out;
  }

  /* 🖱️ Hover Effect: Show description */
  .product-card:hover .product-description {
      opacity: 1;
      transform: translateY(-2px);
  }

  .product-card:hover .product-price {
      transform: translateY(15px); /* Moves below the description */
  }

  .product-card-actions {
    position: absolute;
    bottom: -50px; /* Start below the visible area */
    left: 50%;
    transform: translateX(-50%);
    background: rgb(var(--color-background));
    color: rgb(var(--color-foreground));
    {% comment %} border-radius: 20px; {% endcomment %}
    padding: 12px;
    font-size: 12px;
    font-weight: 500;
    cursor: pointer;
    opacity: 0;
    transition: all 0.4s ease-in-out; /* Smooth transition for both slide and fade */
    text-transform: uppercase;
    letter-spacing: 1px;
    font-size: 14px;
    line-height: calc(1 + 0.2 / var(--font-body-scale));
    border: 1px solid rgb(var(--color-foreground)) !important;
    {% comment %} z-index: 1; {% endcomment %}
  }

  .product-card:hover .product-card-actions {
    opacity: 1;
    bottom: 24px; /* Slides up into view */
      {% comment %} transform: translateY(20px); {% endcomment %}
  }

  .product-badges {
    position: absolute;
    top: 15px;
    left: 15px;
  }

  .product-badge {
    font-size: 12px;
    padding: 0px 10px;
    font-weight: 700;
    background-color: rgb(var(--color-background));
    color: rgb(var(--color-foreground));
  }

  .product-quick-view {
    position: absolute;
    top: 20px;
    right: 20px;
  }

  .products-slider__subheading {
    max-width: calc((100vw - (10px * 2)) / 12 * 3);
    font-weight: 400;
    line-height: 20px;
    letter-spacing: normal;
    font-size: 1.4rem;
  }

  @media screen and (max-width: 749px) {
    .slider-container {
      max-width: 95%;
    }

    .products-slider__heading {
      font-size: 24px;
      margin-bottom: 5px;
    }

    .products-slider__subheading {
      font-size: 16px;
      margin-bottom: 5px;
      max-width: calc((100vw - (10px * 2)) / 12 * 12);
    }

    .products-slider__link_btn {
      font-size: 12px;
    }

    .slider-controls {
      margin-top: 0 !important;
    }

    .products-slider-skeleton-wrapper {
      flex-shrink: 0;
      max-height: 600px;
    }

    .skeleton-desktop {
      display: none;
    }

    /* Show mobile version by default */
    .skeleton-mobile {
      display: flex;
    }

    .slider-wrapper .product-card img {
      max-height: 600px;
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
  // Fetch all sliders on the page
  const sliderContainers = document.querySelectorAll(".slider-container");

  // Iterate over each slider instance
  sliderContainers.forEach((sliderContainer) => {
      // Fetch required DOM elements for each slider instance
      const sliderWrapper = sliderContainer.querySelector(".slider-wrapper");
      const sliderTrack = sliderContainer.querySelector(".slider-track-container");
      const leftArrow = sliderContainer.querySelector(".slider-left");
      const rightArrow = sliderContainer.querySelector(".slider-right");
      const visibleItemsCount = sliderContainer.querySelector(".visible_items_count");
      const totalItemsCount = sliderContainer.querySelector(".total_items_count");
      const productCards = sliderContainer.querySelectorAll(".product-card");
      const skeletonMobile = document.querySelector(".skeleton-mobile");
      const skeletonDesktop = document.querySelector(".skeleton-desktop");
      {% comment %} const showSliderBarCheckbox = document.querySelector('#show_slider_bar'); {% endcomment %}

      const skeletonContainer = sliderContainer.querySelector(".products-slider-skeleton-container");
      const productList = sliderContainer.querySelector(".product-list");
      const images = sliderContainer.querySelectorAll(".slide-image");

      // Ensure we have products before proceeding
      if (!sliderWrapper || productCards.length === 0) return;

      // Get slider settings from data attributes
      const imagesPerSlideDesktop = parseInt(sliderWrapper.getAttribute("data-images-per-slide-desktop"), 10);
      const imagesPerSlideMobile = parseInt(sliderWrapper.getAttribute("data-images-per-slide-mobile"), 10);
      const showSliderBar = {{ section.settings.show_slider_bar | json }}; // Liquid to JS
      const productCount = parseInt(sliderContainer.getAttribute("data-product-count"), 10);

      const sliderProgress = showSliderBar ? sliderContainer.querySelector(".slider-progress") : null;

      let imagesPerSlide;
      let productCardWidth;
      let totalProducts = productCards.length;
      let currentSliderValue = 0;

      // Initial function to calculate product card width based on screen size
      function updateProductCardWidth() {
          // Set images per slide based on screen width
          imagesPerSlide = window.innerWidth > 768 ? imagesPerSlideDesktop : imagesPerSlideMobile;
          
          // Calculate width of each product card
          let sliderWrapperWidth = sliderWrapper.offsetWidth;
          productCardWidth = sliderWrapperWidth / imagesPerSlide;

          // Apply calculated width to each product card
          productCards.forEach((product) => {
              product.style.width = productCardWidth + "px";
          });
      }

      // Call the function initially and on window resize
      updateProductCardWidth();
      window.addEventListener("resize", updateProductCardWidth);

      // Calculate total steps for the slider
      const stepSize = imagesPerSlide;
      const maxSteps = Math.ceil(totalProducts / stepSize) - 1;

      // Update visible and total item counts
      visibleItemsCount.textContent = String(stepSize).padStart(2, "0");
      totalItemsCount.textContent = String(productCount).padStart(2, "0");

      // Function to update the slider position and progress bar
      function updateSlider(value) {

          // Calculate translateX for slider movement
          const translateX = -value * stepSize * productCardWidth;
          sliderWrapper.style.transform = `translateX(${translateX}px)`;

          if(showSliderBar && sliderProgress) {
            // Dynamically calculate progress bar position and width
            const stepPercentage = 100 / (maxSteps + 1);
            const startPosition = value * stepPercentage;
            const endPosition = startPosition + stepPercentage;

            sliderProgress.style.width = `${endPosition - startPosition}%`;
            sliderProgress.style.left = `${startPosition}%`;
          }

          // Adjust the visible items count
          let displayedItems = stepSize * (value + 1);
          if (displayedItems > totalProducts) {
              displayedItems = totalProducts; // For last step
          }

          visibleItemsCount.textContent = `${displayedItems.toString().padStart(2, "0")}`;
          {% comment %} visibleItemsCount.textContent = `${displayedItems.toString().padStart(2, "0")}/${totalProducts.toString().padStart(2, "0")}`; {% endcomment %}
      }

      // Event listener for Left Arrow
      leftArrow?.addEventListener("click", () => {
          if (currentSliderValue === 0) return;
          currentSliderValue = Math.max(0, --currentSliderValue);
          updateSlider(currentSliderValue);
      });

      // Event listener for Right Arrow
      rightArrow?.addEventListener("click", () => {
          if (currentSliderValue === maxSteps) return;
          currentSliderValue = Math.min(maxSteps, ++currentSliderValue);
          updateSlider(currentSliderValue);
      });

      // Event listener for Track Click (to skip to a step based on click position)
      sliderTrack?.addEventListener("click", (e) => {
          const trackWidth = sliderTrack.clientWidth;
          const clickX = e.clientX - sliderTrack.getBoundingClientRect().left;
          const clickedStep = Math.round((clickX / trackWidth) * maxSteps);

          currentSliderValue = clickedStep;
          updateSlider(currentSliderValue);
      });

      // Initialize slider with the first position
      updateSlider(0);

      // Function to show each image as it loads
      function handleImageLoad(img) {
        img.classList.remove("hidden");
        img.classList.add("fade-in");
      }

      // Function to hide skeleton when at least one image is loaded
      function checkAndHideSkeleton() {
          if (Array.from(images).some((img) => img.complete && img.naturalWidth > 0)) {
              skeletonContainer?.classList.add("hidden");
              productList?.classList.remove("hidden");
              if (skeletonMobile) skeletonMobile.style.display = "none";
              if (skeletonDesktop) skeletonDesktop.style.display = "none";
          }
      }

      images.forEach((img) => {
          if (img.complete && img.naturalWidth > 0) {
              handleImageLoad(img);
          } else {
              img.addEventListener("load", () => {
                  handleImageLoad(img);
                  checkAndHideSkeleton();
              });
              img.addEventListener("error", () => console.warn("Image failed to load:", img.src));
          }
      });

      // Check once in case images were cached and loaded instantly
      checkAndHideSkeleton();
  });
});
</script>

{% schema %}
{
  "name": "Products Slider",
  "class": "section",
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-7"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Shop Our looks"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "Sub Heading",
      "default": "Look your best in our curated outfits"
    },
    {
      "type": "text",
      "id": "button_label",
      "label": "Button Label",
      "default": "Discover More"
    },
    {
      "type": "text",
      "id": "button_link",
      "label": "Button Link",
      "default": "/"
    },
    {
      "type": "text",
      "id": "quick_actions_text",
      "label": "Product Quick Action Text",
      "default": "ADD TO CART"
    },
    {
      "type": "collection",
      "id": "collection_handle",
      "label": "Select Collection"
    },
    {
      "type": "range",
      "id": "images_per_slide_desktop",
      "label": "Images per slide (Desktop)",
      "min": 3,
      "max": 6,
      "step": 1,
      "default": 4
    },
    {
      "type": "range",
      "id": "images_per_slide_mobile",
      "label": "Images per slide (Mobile)",
      "min": 1,
      "max": 3,
      "step": 1,
      "default": 2
    },
    {
      "type": "checkbox",
      "id": "show_product_info",
      "label": "Show Product Information?",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_slider_bar",
      "label": "Show Slider Bar?",
      "default": true
    }
  ],
  "presets": [
    {
      "name": "Products Slider"
    }
  ]
}
{% endschema %}
